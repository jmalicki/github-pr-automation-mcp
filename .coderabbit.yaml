# CodeRabbit Configuration
# Docs: https://docs.coderabbit.ai/reference/configuration

language: "en-US"
early_access: false
enable_free_tier: false

reviews:
  profile: "chill"
  request_changes_workflow: true
  high_level_summary: true
  poem: false
  review_status: true
  collapse_walkthrough: false
  auto_review:
    enabled: true
    auto_incremental_review: true
    drafts: false  # Skip reviews for draft PRs
  
  # Ignore patterns - tell CodeRabbit to skip certain checks
  path_filters:
    - "!**/*.md"  # We handle markdown linting separately
    - "!docs/**"  # Design docs are already reviewed
  
  # Custom instructions for the reviewer
  instructions:
    - "Do NOT comment on style, formatting, naming conventions, or code organization - these are handled by ESLint and TypeScript"
    - "Do NOT suggest variable renames unless the name is genuinely misleading or confusing"
    - "Do NOT comment on documentation formatting or markdown style"
    - "FOCUS ON: Logic errors, correctness bugs, edge cases in GitHub API integration"
    - "FOCUS ON: Error handling (unhandled promise rejections, missing try-catch, incorrect error propagation)"
    - "FOCUS ON: Security vulnerabilities (token exposure, injection risks, unauthorized access)"
    - "FOCUS ON: Performance problems (unnecessary API calls, inefficient parsing, memory leaks)"
    - "FOCUS ON: Async/await correctness, especially with Octokit and MCP protocol handling"
    - "FOCUS ON: Type safety issues that TypeScript strict mode might miss"
    - "FOCUS ON: MCP protocol compliance and stdio transport correctness"
    - "FOCUS ON: Pagination logic correctness and edge cases"
    - "FOCUS ON: GitHub API rate limiting and retry logic"
    - "FOCUS ON: User preference precedence (explicit > preference > default) - this is critical"
    - "Be thorough in analyzing control flow, edge cases, and boundary conditions"
    - "This project implements an MCP server for GitHub PR automation - understand the MCP protocol context"

chat:
  auto_reply: false

# Tool-specific configuration
tools:
  shellcheck:
    enabled: true
  markdownlint:
    enabled: false  # We run this separately
  languagetool:
    enabled: false  # Grammar checking not needed for code

