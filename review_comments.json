
> github-pr-automation@0.1.1 cli
> tsc && node dist/cli.js find-unresolved-comments --pr jmalicki/github-pr-automation-mcp#17 --json

{
  "pr": "jmalicki/github-pr-automation-mcp#17",
  "unresolved_in_page": 1,
  "comments": [
    {
      "id": 3434468850,
      "type": "issue_comment",
      "author": "coderabbitai[bot]",
      "author_association": "CONTRIBUTOR",
      "is_bot": true,
      "created_at": "2025-10-22T23:01:46Z",
      "updated_at": "2025-10-22T23:18:48Z",
      "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->\n\n> [!WARNING]\n> ## Rate limit exceeded\n> \n> @jmalicki has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **2 minutes and 6 seconds** before requesting another review.\n> \n> <details>\n> <summary>‚åõ How to resolve this issue?</summary>\n> \n> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.\n> \n> We recommend that you space out your commits to avoid hitting the rate limit.\n> \n> </details>\n> \n> \n> <details>\n> <summary>üö¶ How do rate limits work?</summary>\n> \n> CodeRabbit enforces hourly rate limits for each developer per organization.\n> \n> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.\n> \n> Please see our [FAQ](https://docs.coderabbit.ai/faq) for further information.\n> \n> </details>\n> \n> <details>\n> <summary>üì• Commits</summary>\n> \n> Reviewing files that changed from the base of the PR and between 338c84164034f97267a237bcf948f132f5cc4860 and 189229b8347be2e41929d6752434d8fee2c881e5.\n> \n> </details>\n> \n> <details>\n> <summary>üìí Files selected for processing (3)</summary>\n> \n> * `.github/workflows/build.yml` (1 hunks)\n> * `.github/workflows/lint.yml` (1 hunks)\n> * `.github/workflows/test.yml` (1 hunks)\n> \n> </details>\n\n<!-- end of auto-generated comment: rate limited by coderabbit.ai -->\n\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nMigration from old ESLint configuration (.eslintrc.json) to flat config format (eslint.config.js) compatible with ESLint v9+. Updated major versions of ESLint, TypeScript, and related dependencies. Removed inline eslint-disable comments from source files. Refactored test mocks from function-based to class-based implementation.\n\n## Changes\n\n| Cohort / File(s) | Summary |\n|---|---|\n| **ESLint Configuration Migration** <br> `.eslintignore`, `.eslintrc.json`, `eslint.config.js` | Replaced old ESLint config format with new flat config. Removed .eslintignore patterns and deleted .eslintrc.json. Added eslint.config.js with @eslint/js and @typescript-eslint support, type-checking rules, custom rule overrides, and ignore patterns. |\n| **Dependency Updates** <br> `package.json` | Updated major versions: @modelcontextprotocol/sdk (^0.5.0 ‚Üí ^1.20.1), @octokit packages (rest ^20.0.2 ‚Üí ^22.0.0, auth-app ^6.0.3 ‚Üí ^8.1.1), commander (^11.1.0 ‚Üí ^14.0.1), zod (^3.22.4 ‚Üí ^4.1.12), @types/node (^20.11.0 ‚Üí ^24.9.1), @typescript-eslint packages (^6.19.0 ‚Üí ^8.46.2), eslint (^8.56.0 ‚Üí ^9.38.0), husky (^8.0.3 ‚Üí ^9.1.7), vitest and @vitest/coverage-v8 (^1.2.0 ‚Üí ^4.0.1). |\n| **Linting Directive Cleanup** <br> `src/tools/find-unresolved-comments/handler.ts`, `src/tools/resolve-review-thread/handler.ts` | Removed eslint-disable-next-line comments for `no-unsafe-assignment` from GraphQL response handling; retained only `no-unsafe-member-access` suppressions where needed. |\n| **Test Mock Refactoring** <br> `tests/mcp-server.test.ts` | Changed GitHubClient mock from function-based to class-based implementation. Added richer mocked API surface including rest.pulls, rest.checks, rest.issues methods, graphql function, and validateToken class property. |\n\n## Estimated code review effort\n\nüéØ 4 (Complex) | ‚è±Ô∏è ~45 minutes\n\nMultiple heterogeneous changes spanning configuration migration, significant dependency version upgrades (ESLint v8‚Üív9, TypeScript ecosystem updates), source code linting changes, and test infrastructure refactoring. Requires verification of compatibility across new ESLint flat config, updated parser/plugin versions, and mocked API surface correctness in tests.\n\n<!-- walkthrough_end -->\n\n<!-- pre_merge_checks_walkthrough_start -->\n\n## Pre-merge checks and finishing touches\n<details>\n<summary>‚ùå Failed checks (1 warning)</summary>\n\n|     Check name     | Status     | Explanation                                                                           | Resolution                                                                     |\n| :----------------: | :--------- | :------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------- |\n| Docstring Coverage | ‚ö†Ô∏è Warning | Docstring coverage is 50.00% which is insufficient. The required threshold is 80.00%. | You can run `@coderabbitai generate docstrings` to improve docstring coverage. |\n\n</details>\n<details>\n<summary>‚úÖ Passed checks (2 passed)</summary>\n\n|     Check name    | Status   | Explanation|\n| :---------------: | :------- ||\n| Description Check | ‚úÖ Passed | Check skipped - CodeRabbit‚Äôs high-level summary is enabled.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n|    Title Check    | ‚úÖ Passed | The pull request title \"feat: upgrade packages to latest major versions\" directly and accurately reflects the primary objective and content of the changeset. The PR encompasses comprehensive dependency upgrades (vitest, @types/node, @modelcontextprotocol/sdk, @octokit/rest, @octokit/auth-app, @typescript-eslint, eslint, zod, commander, husky) documented in package.json, along with necessary breaking-change adaptations such as the ESLint 9 configuration migration (removal of .eslintrc.json and addition of eslint.config.js), test mock updates for Vitest 4.0 compatibility, and related linting directive adjustments. The title is concise, specific, and uses standard commit message format without vague language or noise. |\n\n</details>\n\n<!-- pre_merge_checks_walkthrough_end -->\n\n<!-- tips_start -->\n\n---\n\n\n\n<sub>Comment `@coderabbitai help` to get the list of available commands and usage tips.</sub>\n\n<!-- tips_end -->\n\n<!-- internal state start -->\n\n\n<!-- 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 -->\n\n<!-- internal state end -->",
      "reactions": {
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "html_url": "https://github.com/jmalicki/github-pr-automation-mcp/pull/17#issuecomment-3434468850",
      "action_commands": {
        "reply_command": "gh pr comment 17 --repo jmalicki/github-pr-automation-mcp --body \"YOUR_RESPONSE_HERE\"",
        "resolve_condition": "This comment type cannot be resolved via API",
        "view_in_browser": "gh pr view 17 --repo jmalicki/github-pr-automation-mcp --web"
      }
    }
  ],
  "summary": {
    "comments_in_page": 1,
    "by_author": {
      "coderabbitai[bot]": 1
    },
    "by_type": {
      "issue_comment": 1
    },
    "bot_comments": 1,
    "human_comments": 0,
    "with_reactions": 0
  }
}
