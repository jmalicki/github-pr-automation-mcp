{
  "_comment": "This file contains the 'gold standard' MCP schema extracted from src/index.ts. It represents the manual JSON Schema that was working correctly before we implemented Zod-based schema generation. This schema is used as the reference for testing that our Zod schema generates identical JSON Schema.",
  "_extraction_date": "2025-10-29",
  "_source": "src/index.ts - find_unresolved_comments tool inputSchema",
  "_purpose": "Reference schema for schema synchronization tests",
  "type": "object",
  "properties": {
    "pr": {
      "type": "string",
      "description": "PR identifier (owner/repo#123 or URL)"
    },
    "include_bots": {
      "type": "boolean",
      "description": "ðŸ’¾ Include bot comments (default: true). User preference: noise tolerance",
      "default": true
    },
    "exclude_authors": {
      "type": "array",
      "description": "Specific authors to exclude (optional)",
      "items": { "type": "string" }
    },
    "cursor": {
      "type": "string",
      "description": "MCP cursor for pagination (optional)"
    },
    "sort": {
      "type": "string",
      "description": "ðŸ’¾ Sort order: chronological, by_file, by_author, priority (default: priority). User preference",
      "enum": ["chronological", "by_file", "by_author", "priority"],
      "default": "priority"
    },
    "parse_review_bodies": {
      "type": "boolean",
      "description": "Parse review bodies for actionable comments (default: true)",
      "default": true
    },
    "include_status_indicators": {
      "type": "boolean",
      "description": "ðŸ’¾ Include status indicators (default: true). User preference: workflow management",
      "default": true
    },
    "priority_ordering": {
      "type": "boolean",
      "description": "ðŸ’¾ Use priority-based ordering (default: true). User preference: task prioritization",
      "default": true
    },
    "coderabbit_options": {
      "type": "object",
      "description": "CodeRabbit-specific parsing and filtering options",
      "properties": {
        "include_nits": {
          "type": "boolean",
          "description": "ðŸ’¾ Include minor suggestions (default: true). User preference: noise tolerance",
          "default": true
        },
        "include_duplicates": {
          "type": "boolean",
          "description": "ðŸ’¾ Include duplicate suggestions (default: true). User preference: code quality focus",
          "default": true
        },
        "include_additional": {
          "type": "boolean",
          "description": "ðŸ’¾ Include additional comments (default: true). User preference: enhancement suggestions",
          "default": true
        },
        "suggestion_types": {
          "type": "array",
          "description": "Specific suggestion types to include (optional)",
          "items": {
            "type": "string",
            "enum": ["nit", "duplicate", "additional", "actionable"]
          }
        },
        "prioritize_actionable": {
          "type": "boolean",
          "description": "ðŸ’¾ Show actionable items first (default: false). User preference: priority focus",
          "default": false
        },
        "group_by_type": {
          "type": "boolean",
          "description": "ðŸ’¾ Group comments by suggestion type (default: false). User preference: organization",
          "default": false
        },
        "extract_agent_prompts": {
          "type": "boolean",
          "description": "ðŸ’¾ Generate agent-friendly prompts (default: true). User preference: AI agent optimization",
          "default": true
        }
      }
    }
  },
  "required": ["pr"]
}
