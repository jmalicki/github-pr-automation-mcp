{
  "id": 3459161478,
  "type": "issue_comment",
  "author": "coderabbitai[bot]",
  "author_association": "CONTRIBUTOR",
  "is_bot": true,
  "created_at": "2025-10-29T00:21:54Z",
  "updated_at": "2025-10-29T00:26:29Z",
  "body": [
    "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->",
    "<!-- walkthrough_start -->",
    "",
    "## Walkthrough",
    "",
    "This pull request introduces Git hooks for commit message validation, pre-commit checks, and pre-push version verification. It adds markdownlint and commitlint configuration files, updates ESLint ignores, and adds npm scripts for markdown linting and guided commits.",
    "",
    "## Changes",
    "",
    "| Cohort / File(s) | Summary |",
    "|---|---|",
    "| **Husky Git Hooks** <br> `.husky/commit-msg`, `.husky/pre-commit`, `.husky/pre-push` | `commit-msg` hook replaced with commitlint invocation; `pre-commit` hook added to run markdownlint on Markdown files and ESLint on JavaScript/TypeScript files; `pre-push` hook introduced to validate version tags. |",
    "| **Linting Configuration** <br> `.markdownlint.json`, `commitlint.config.cjs` | `.markdownlint.json` created with disabled/configured rules (MD013, MD024, MD033, etc.); `commitlint.config.cjs` created extending conventional preset with type-enum, case constraints, and validation rules for commit messages. |",
    "| **ESLint Configuration** <br> `eslint.config.js` | Ignores list expanded to include `scripts/pre-push-version-check.js` and `commitlint.config.cjs`. |",
    "| **Dependency and Script Management** <br> `package.json` | Four npm scripts added: `commit` (git-cz), `commit:retry`, `lint:md`, `lint:md:fix`; commitizen config section added; five dev dependencies added: @commitlint/cli, @commitlint/config-conventional, commitizen, cz-conventional-changelog, markdownlint-cli. |",
    "| **Version Validation Script** <br> `scripts/pre-push-version-check.js` | New script that detects version tags matching vMAJOR.MINOR.PATCH pattern and validates existence of package.json and docs/CHANGELOG.md before allowing push. |",
    "",
    "## Sequence Diagram",
    "",
    "```mermaid",
    "sequenceDiagram",
    "    participant User",
    "    participant Git",
    "    participant commit-msg",
    "    participant pre-commit",
    "    participant pre-push",
    "",
    "    User->>Git: git commit",
    "    Git->>commit-msg: Run commit-msg hook",
    "    commit-msg->>commit-msg: Validate message via commitlint",
    "    alt Message valid",
    "        commit-msg-->>Git: Exit 0",
    "    else Message invalid",
    "        commit-msg-->>Git: Exit 1 (abort)",
    "    end",
    "",
    "    alt Commit successful",
    "        Git->>pre-commit: Run pre-commit hook",
    "        par Run checks",
    "            pre-commit->>pre-commit: markdownlint on staged .md files",
    "            pre-commit->>pre-commit: ESLint --fix on staged .js/.ts files",
    "        end",
    "        pre-commit-->>Git: Exit 0 (stage updates)",
    "    end",
    "",
    "    User->>Git: git push",
    "    Git->>pre-push: Run pre-push hook",
    "    pre-push->>pre-push: Detect version tags (v*.*.*)",
    "    alt Version tags found",
    "        pre-push->>pre-push: Validate package.json exists",
    "        pre-push->>pre-push: Validate docs/CHANGELOG.md exists",
    "        alt All files present",
    "            pre-push-->>Git: Exit 0",
    "        else Files missing",
    "            pre-push-->>Git: Exit 1 (abort)",
    "        end",
    "    else No version tags",
    "        pre-push-->>Git: Exit 0 (skip validation)",
    "    end",
    "```",
    "",
    "## Estimated code review effort",
    "",
    "üéØ 3 (Moderate) | ‚è±Ô∏è ~25 minutes",
    "",
    "- **`.husky/` hook files**: Verify correct Husky syntax, environment loading, and command invocations; confirm proper error handling and exit codes.",
    "- **`scripts/pre-push-version-check.js`**: Pay special attention to the regex pattern for version tag detection, try/catch error handling, and git command invocations to ensure robustness.",
    "- **`commitlint.config.cjs`**: Review rule severities (error vs. warning) and type-enum values to ensure alignment with project conventions.",
    "- **`package.json`**: Verify correct dependency versions and script command syntax; confirm commitizen config path is accurate.",
    "",
    "<!-- walkthrough_end -->",
    "",
    "",
    "<!-- pre_merge_checks_walkthrough_start -->",
    "",
    "## Pre-merge checks and finishing touches",
    "<details>",
    "<summary>‚ùå Failed checks (1 warning)</summary>",
    "",
    "|     Check name     | Status     | Explanation                                                                          | Resolution                                                                     |",
    "| :----------------: | :--------- | :----------------------------------------------------------------------------------- | :----------------------------------------------------------------------------- |",
    "| Docstring Coverage | ‚ö†Ô∏è Warning | Docstring coverage is 0.00% which is insufficient. The required threshold is 80.00%. | You can run `@coderabbitai generate docstrings` to improve docstring coverage. |",
    "",
    "</details>",
    "<details>",
    "<summary>‚úÖ Passed checks (2 passed)</summary>",
    "",
    "|     Check name    | Status   | Explanation|",
    "| :---------------: | :------- ||",
    "| Description Check | ‚úÖ Passed | Check skipped - CodeRabbit‚Äôs high-level summary is enabled|",
    "|    Title Check    | ‚úÖ Passed | The pull request title \"feat: add client-side git hooks for code quality and conventional commits\" directly and comprehensively summarizes the main changes in this changeset. The title accurately reflects the core additions: multiple Husky-based Git hooks (.commit-msg, .pre-commit, .pre-push) for enforcing conventional commits, linting staged files, and validating releases, along with supporting configuration files and npm scripts. The title is concise, specific, and uses the conventional commit format appropriately. It avoids vague or misleading language and provides clear information about what was changed. |",
    "",
    "</details>",
    "",
    "<!-- pre_merge_checks_walkthrough_end -->",
    "",
    "<!-- finishing_touch_checkbox_start -->",
    "",
    "<details>",
    "<summary>‚ú® Finishing touches</summary>",
    "",
    "- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> üìù Generate docstrings",
    "<details>",
    "<summary>üß™ Generate unit tests (beta)</summary>",
    "",
    "- [ ] <!-- {\"checkboxId\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Create PR with unit tests",
    "- [ ] <!-- {\"checkboxId\": \"07f1e7d6-8a8e-4e23-9900-8731c2c87f58\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Post copyable unit tests in a comment",
    "- [ ] <!-- {\"checkboxId\": \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Commit unit tests in branch `feature/pre-receive-hook-validation`",
    "",
    "</details>",
    "",
    "</details>",
    "",
    "<!-- finishing_touch_checkbox_end -->",
    "",
    "<!-- tips_start -->",
    "",
    "---",
    "",
    "",
    "",
    "<sub>Comment `@coderabbitai help` to get the list of available commands and usage tips.</sub>",
    "",
    "<!-- tips_end -->",
    "",
    "<!-- internal state start -->",
    "",
    "",
    "<!-- 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= -->",
    "",
    "<!-- internal state end -->"
  ],
  "reactions": {
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "html_url": "https://github.com/jmalicki/github-pr-automation-mcp/pull/65#issuecomment-3459161478",
  "action_commands": {
    "reply_command": "gh pr comment 65 --repo jmalicki/github-pr-automation-mcp --body \"YOUR_RESPONSE_HERE\"",
    "resolve_condition": "This comment type cannot be resolved via API",
    "view_in_browser": "gh pr view 65 --repo jmalicki/github-pr-automation-mcp --web"
  },
  "status_indicators": {
    "needs_mcp_resolution": false,
    "has_manual_response": false,
    "is_actionable": true,
    "is_outdated": false,
    "priority_score": 15,
    "resolution_status": "unresolved",
    "suggested_action": "reply"
  }
}
